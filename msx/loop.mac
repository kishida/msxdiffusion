MUL3 MACRO
	LD B, A
	ADD A, A
	ADD A, B
ENDM

MUL6 MACRO
	ADD A, A
	MUL3
ENDM

MUL12 MACRO
	ADD A, A
	MUL6
ENDM

MUL16 MACRO
	ADD A, A
	ADD A, A
	ADD A, A
	ADD A, A
ENDM

MUL32 MACRO
	RRCA
	RRCA
	RRCA
	AND 0E0H
ENDM

DIV8A MACRO
	RRA
	RRA
	RRA
	AND 31
ENDM

DIV16A MACRO
	RRA
	RRA
	RRA
	RRA
	AND 15
ENDM

DIV64A MACRO
	RLCA
	RLCA
	AND 3
ENDM

DIV3_4bit MACRO
	LD C, 0CH
	LD B, 3
	CALL DIV_JP
ENDM

DIV10_6bit MACRO
	LD C, 028H
	LD B, 3
	CALL DIV_JP
ENDM

DIV12_7bit MACRO
	LD C, 60H
	LD B, 4
	CALL DIV_JP
ENDM

DIV12 MACRO
	LD C, 0C0H
	LD B, 5
	CALL DIV_JP
ENDM

CLIP7 MACRO
	LOCAL CLIPEND
	CP 8
	JP C, CLIPEND
	LD A, 7
CLIPEND:
ENDM

MODULO MACRO N
	LOCAL MODEND
	SUB N
	JP NC, MODEND
	ADD A, N
MODEND:
ENDM

RDVDP	EQU	6H
WRVDP	EQU	7H
BUFSIZ	EQU	512

	ORG 0C000H-7
			; bsave header
	DEFB 0FEH
	DEFW 0C000H
	DEFW DUMMY
	DEFW 0C000H

			; clear diffnr, diffng
	LD BC, BUFSIZ
	LD HL, DIFFNR
	LD D, 0
INIT:
	LD (HL), D
	INC HL
	DEC BC
	LD A, B
	OR C
	JP NZ, INIT

	LD A, (WRVDP)
	INC A
	EX AF, AF'

	XOR A
	EXX
	LD C, A
LOOPY:
			; int cr = y % 2;
			; int cw = 1 - cr;
	EXX
	AND 1
	LD B, A

	LD HL, DIFFNR
	ADD A, H
	LD H, A
	PUSH HL
	POP IX

	SUB B
	LD H, A
	LD A, B
	XOR 1
	ADD H
	LD H, A
	PUSH HL
	POP IY

			; int dr = yr[0][cr] + (y % 96);
			; int b1 = y / 96 * 2;
	EXX
	LD H, 2
	LD A, C
	SUB 96
	JP NC, YMOD96_1
	ADD 96
	LD H, 0
YMOD96_1:
	EXX
	ADD A, (IX+0)
			; int r = dr / 12;
			; if (r > 7){
			;     r = 7;
			; }
			; dr = dr - r * 12;
	LD E, A
	DIV12
	LD A, D
	CLIP7
	ADD A, A
	ADD A, A
	LD H, A
	MUL3
	SUB A, E
	NEG
			; int tr = dr * 6 / 16; yr[0][cw] = tr;
	MUL3
	DIV8A
	LD (IY+0), A
	LD B, A
			; t = dr / 16; yr[1][cw] = t;
	LD A, C
	DIV16A
	LD (IY+1), A
			; dr = dr - tr - t;
	LD A, C
	AND 0F0H
	SUB B
	EXX
	LD D, A
	EXX

			; int dg = yg[0][cr];
	LD DE, BUFSIZ
	ADD IX, DE
	ADD IY, DE
	LD E, (IX+0)
			; int g = dg / 16;
	LD A, E
	DIV16A
			; if (g > 7){
			;     g = 7;
			; }
	CLIP7
	MUL32
	LD L, A
			; dg = dg % 16;
	LD A, E
	AND 15
	LD C, A
			; int tg = dg * 6 / 16; yg[0][cw] = tg;
	MUL3
	DIV8A
	LD (IY+0), A
	LD B, A
			; t = dg / 16; yg[1][cw] = t;
			; do nothing since dg is less than 16
			; dg = dg - tg - t;
	LD A, C
	SUB A, B
	EXX
	LD E, A

			; c = color(r * 32 + g * 4 + b1)
	LD A, H
	EXX
	ADD A, H
	ADD A, L
	LD D, A

			; img.setrgb(0, y, c);
	EX AF, AF'
	LD C, A
	EX AF, AF'

	EXX
	LD A, C
	EXX
	LD B, A
	DIV64A
	DI
	OUT (C), A
	LD A, 80H + 14
	OUT (C), A
	XOR A
	OUT (C), A
	LD A, B
	AND 3FH
	OR 40H
	OUT (C), A
	DEC C
	OUT (C), D
	EI

	LD DE, -BUFSIZ
	ADD IX, DE
	ADD IY, DE

	EXX
	LD B, 1
LOOPX:
			; dr = dr + yr[x][cr] + (y % 96);
	LD A, C
	MODULO 96
	ADD A, D
	EXX
	ADD A, (IX + 1)

			; r = dr / 12;
	LD E, A
	DIV12_7bit
	LD A, D
			; if (r > 7){
			;     r = 7;
			; }
	CLIP7
	ADD A, A
	ADD A, A
	LD L, A
			; dr = dr - r * 12;
	MUL3
	SUB A, E
	NEG
	AND 15

			; t = dr / 16; yr[x + 1][cw] = t; dr = dr - t;
			; do nothing since dr is less than 16
	LD E, A
			; t = dr / 3; yr[x][cw] = yr[x][cw] + t; dr = dr - t;
	DIV3_4bit
	LD (IY+1),D
	LD A, E
	SUB D
	LD E, A
			; t = dr * 3 / 10; yr[x - 1][cw] = yr[x - 1][cw] + t;
			; dr = dr - t;
	MUL3
	DIV10_6bit
	LD A, D
	ADD A, (IY+0)
	LD (IY+0),A
	LD A, E
	SUB D
	EXX
	LD D, A
	EXX

	LD DE, BUFSIZ
	ADD IX, DE
	ADD IY, DE

			; dg = dg + yg[x][cr] + (x % 128);
	EXX
	LD A, B
	AND 127
	ADD A, E
	EXX
	ADD A, (IX + 1)

			; g = dg / 16;
	LD E, A
	DIV16A
			; if (g > 7){
			;     g = 7;
			; }
	CLIP7
	MUL32
	LD H, A
			; dg = dg % 16;
	LD A, E
	AND 15
	LD E, A
			; t = dg / 16; yg[x + 1][cw] = t; dg = dg - t;
			; do nothing since dg is less than 16
			; t = dg / 3; yg[x][cw] = yg[x][cw] + t; dg = dg - t;
	DIV3_4bit
	LD (IY+1), D
	LD A, E
	SUB D
	LD E, A
			; t = dg * 3 / 10; yg[x - 1][cw] = yg[x - 1][cw] + t;
			; dg = dg - t;
	MUL3
	DIV10_6bit
	LD A, D
	ADD A, (IY+0)
	LD (IY+0),A
	LD A,E
	SUB D
	EXX
	LD E, A
	LD A, H
	EXX

			; c = color(g * 32 + r * 4 + b1 + x / 128)
	ADD A, H
	ADD A, L
	LD D, A
	EXX
	LD A, B
	EXX
	LD E, A
	AND 128
	JP Z, DIV128
	INC D
DIV128:
			; img.setrgb(x, y, c);
	EX AF, AF'
	LD C, A
	EX AF, AF'

	EXX
	LD A, C
	EXX
	DI
	OUT (C), E
	AND 3FH
	OR 40H
	OUT (C), A
	DEC C
	OUT (C), D
	EI

	LD DE, -BUFSIZ+1
	ADD IX, DE
	ADD IY, DE

	EXX
	INC B
	JP NZ, LOOPX

	INC C
	LD A, C
	CP 192
	JP NZ, LOOPY
	RET

; IN A, B, C
; OUT D DIV
; USE A, B=0, C
DIV_JP:
	LD D, 0
DIV_LP:
	SLA D
	SUB C
	JP C, DIVM_N
DIV_NX:
	INC D
	SRL C
	DJNZ DIV_LP
	RET

DIVM_L:
	SLA D
	ADD C
	JP C, DIV_NX
DIVM_N:
	SRL C
	DJNZ DIVM_L
	RET

DIFFNR:	DEFS BUFSIZ
DIFFNG: DEFS BUFSIZ
DUMMY:	DEFB 0

	END
